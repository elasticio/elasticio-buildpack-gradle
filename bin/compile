#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

BP_DIR=$(cd $(dirname $0)/..; pwd) # absolute path
BIN_DIR=$BP_DIR/bin
OPT_DIR=$BP_DIR/opt
LIB_DIR=$BP_DIR/lib

. $LIB_DIR/common.sh

source $LIB_DIR/elasticio.sh

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

echo "-----> Build folder ${BUILD_DIR}... "

GRADLE_TASK="clean build prepareSailorWithDependencies -b sailor_jvm_build.gradle"

export_env_dir $ENV_DIR


if [ ! -d $CACHE_DIR ] ; then
  mkdir $CACHE_DIR
fi

export GRADLE_USER_HOME=$CACHE_DIR/.gradle

if [ ! -f $BUILD_DIR/gradlew ] ; then
  echo "-----> Installing Gradle Wrapper..."
  echo "       WARNING: Your application does not have it's own gradlew file."
  echo "       We'll install one for you, but this is a deprecated feature and"
  echo "       in the future may not be supported."
  cp -rn ${OPT_DIR}/wrapper/* ${BUILD_DIR}
fi

cp ${OPT_DIR}/sailor_jvm_build.gradle ${BUILD_DIR}

BUILDCMD="./gradlew"
chmod +x ${BUILD_DIR}/gradlew

BUILDCMD="$BUILDCMD $GRADLE_TASK"

cd $BUILD_DIR

# build app
echo "-----> Building Gradle app..."
echo "       WARNING: The Gradle buildpack is currently in Beta."
echo "-----> executing $BUILDCMD"

$BUILDCMD 2>&1 | sed -u 's/^/       /'

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  echo " !     Failed to build connector"
  exit 1
fi

CLASSES_MAIN_DIR="./build/classes/main"
RESOURCES_MAIN_DIR="./build/resources/main"
DEPENDENCIES_DIR="./build/elasticio/dependencies"

echo "Updating component.json"
update_component_json

echo "-----> Make ${BUILD_DIR}/component.json to be available on the classpath"
cp ./component.json $CLASSES_MAIN_DIR

echo "-----> Create sail.sh and serve.sh files"

CLASSPATH=$CLASSES_MAIN_DIR:$RESOURCES_MAIN_DIR:$DEPENDENCIES_DIR/*

ruby -e "require 'yaml';obj = {'config_vars' => {'CLASSPATH' => '$CLASSPATH'}};File.open('.release', 'w') {|f| f.write(obj.to_yaml) }"
echo "java -cp $CLASSES_MAIN_DIR:$RESOURCES_MAIN_DIR:$DEPENDENCIES_DIR/* io.elastic.sailor.Sailor" > sail.sh
echo "java -cp $CLASSES_MAIN_DIR:$RESOURCES_MAIN_DIR:$DEPENDENCIES_DIR/* io.elastic.sailor.Service \${1} \${2} \${3}" > serve.sh

echo "-----> Connector built successfully"
